---
type NativeAnim = 'fade' | 'slide' | 'none' | 'scale' | 'persist';
type WrapperAnim = NativeAnim | 'zoom' | 'rotate' | 'slide-up' | 'slide-down' | 'blur-transition' | 'scale-in';

interface Props {
  name?: string;
  animate?: WrapperAnim;
  scope?: string;
  priority?: 'low' | 'medium' | 'high';
  preloadNext?: boolean;
  class?: string;
}

const { name = 'vt', animate = 'fade', scope, priority = 'medium', preloadNext = false, class: className = '' } = Astro.props as Props;
const nativeAnim = (['zoom','rotate','slide-up','slide-down','blur-transition','scale-in'].includes(String(animate))) ? 'scale' : animate;
---

<div class={className}
  transition:name={name}
  transition:animate={(nativeAnim === 'fade' || nativeAnim === 'slide' || nativeAnim === 'none' || nativeAnim === 'scale' || nativeAnim === 'persist') ? nativeAnim : 'fade'}
  {...(scope ? { 'transition:scope': scope } : {})}
  data-vt-animation={animate}
  data-vt-priority={priority}
  data-vt-preload={preloadNext}
>
  <slot />
  
</div>

<style is:inline>
  @media (prefers-reduced-motion: reduce) {
    [data-vt-animation] { transition: none !important; animation: none !important; }
  }
</style>

<script type="module" is:inline>
  const current = document.currentScript;
  const el = current ? current.previousElementSibling : null;
  const mgr = window && window.viewTransitionsManager;
  if (el && mgr && typeof mgr.reportElement === 'function') {
    try {
      mgr.reportElement({
        transitionName: el.getAttribute('transition:name') || 'vt',
        animationType: el.getAttribute('data-vt-animation') || 'fade',
        priority: el.getAttribute('data-vt-priority') || 'medium',
        preload: el.getAttribute('data-vt-preload') === 'true',
        element: el,
      });
    } catch {}
  }
</script>

